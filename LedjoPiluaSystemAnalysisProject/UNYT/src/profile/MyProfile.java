/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package profile;

import cms.MyConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;


public class MyProfile extends javax.swing.JInternalFrame {

    /** Creates new form MyProfile */
    String userId;
    public MyProfile() {
        initComponents();
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
    }
    public MyProfile(String userId) throws SQLException{
        initComponents();
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        this.userId= userId;
        populateFriendList(userId);
        fillCourseTable();
    }
public void populateFriendList(String id) throws SQLException
{
    
    Connection con= MyConnection.getConnection();
    DefaultListModel model = new DefaultListModel(); //create a new list model

    String query="select fname, lname from student where id in (select studentid2 from friends where studentid1="+ id +")";
    Statement statement = con.createStatement();
    ResultSet resultSet = statement.executeQuery(query); //run your query

    while (resultSet.next()) //go through each row that your query returns
    {
        String fname = resultSet.getString("fname"); 
        String lname =resultSet.getString("lname");
        String name= fname+" "+lname;
        model.addElement(name); //add each item to the model
    }
    friendList.setModel(model);

    resultSet.close();
    statement.close();

}

public ArrayList<GetMyCourses> myCourses() throws SQLException
    {
        ArrayList<GetMyCourses> courseList = new ArrayList<>();
        Connection con = null;
        try{
            con = MyConnection.getConnection();
            
            Statement st;
            ResultSet rs;
            st = con.createStatement();
            String searchQuery = "select * from course where id in (select courseid from studenthastaken where studentid="+ userId + ")";
            rs = st.executeQuery(searchQuery);
            GetMyCourses courses;
            
            while(rs.next())
            {
                
                courses = new GetMyCourses(
                                 rs.getString("id"),
                                 rs.getString("location"),
                                 rs.getTime("start_at"),
                                 rs.getTime("end_at")
                                );
                courseList.add(courses);
            }
            
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }finally{
            con.close();        }
        
        return courseList;
    }
    // function to display data in jtable
    public void fillCourseTable() throws SQLException
    {
        ArrayList<GetMyCourses> courses = myCourses();
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"ID","Location","Start Time", "End Time"});
        Object[] row = new Object[4];
        
        for(int i = 0; i < courses.size(); i++)
        {
            row[0] = courses.get(i).getId();
            row[1] = courses.get(i).getLocation();
            row[2] = courses.get(i).getStart();
            row[3] = courses.get(i).getEnd();
            
            model.addRow(row);
        }
       myCourseTable.setModel(model);
       
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        friendList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        myCourseTable = new javax.swing.JTable();
        dropButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("My Profile");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText(" Friends");

        friendList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(friendList);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("My Courses");

        myCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(myCourseTable);

        dropButton1.setBackground(new java.awt.Color(102, 102, 255));
        dropButton1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        dropButton1.setForeground(new java.awt.Color(255, 255, 255));
        dropButton1.setText("Drop Course");
        dropButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(162, 162, 162))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(483, Short.MAX_VALUE)
                    .addComponent(dropButton1)
                    .addGap(37, 37, 37)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(283, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(325, Short.MAX_VALUE)
                    .addComponent(dropButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(223, 223, 223)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dropButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropButton1ActionPerformed
        // TODO add your handling code here:
                                                 
try{
    // TODO add your handling code here:
        Connection con= MyConnection.getConnection();
        DefaultTableModel model = (DefaultTableModel) myCourseTable.getModel();
        
        
        int row = myCourseTable.getSelectedRow();
        String courseId = myCourseTable.getModel().getValueAt(row, 0).toString();

        
        String query = "delete from studenthastaken where studentid="+ userId+" and courseid='"+courseId+"'";
        PreparedStatement pst;
        try {
            pst = con.prepareStatement(query);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Congratulation !!");
            con.close();
            
        }
        catch(ArrayIndexOutOfBoundsException a){
            JOptionPane.showMessageDialog(null,  "No Item Selected");
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null,  e.getMessage());
        }
        
        model.setRowCount(0);
        try {
            fillCourseTable();
        } catch (SQLException ex) {
            Logger.getLogger(MyProfile.class.getName()).log(Level.SEVERE, null, ex);
        }}catch(ArrayIndexOutOfBoundsException a){
            JOptionPane.showMessageDialog(null,  "No Item Selected");
        }
    
    }//GEN-LAST:event_dropButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dropButton1;
    private javax.swing.JList<String> friendList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable myCourseTable;
    // End of variables declaration//GEN-END:variables

}
